# Generated by Django 4.2.1 on 2023-06-14 13:59

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.text
from django.db import migrations, models

import brand.models
import utilities.dates


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("company_name", models.CharField(blank=True, max_length=100)),
                ("title", models.CharField(max_length=300)),
                ("description", models.TextField()),
                (
                    "founding_year",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(3000),
                        ]
                    ),
                ),
                (
                    "company_size",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1)
                        ],
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        choices=[("IND", "India"), ("INT", "International")],
                        max_length=3,
                    ),
                ),
                ("offline_presence", models.BooleanField(default=False)),
                ("delivery_days", models.PositiveIntegerField(default=7)),
                ("return_days", models.PositiveIntegerField(default=7)),
                (
                    "payment_mode",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PRE", "Prepaid Only"),
                            ("BOTH", "Both Prepaid and Payment On Delivery"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "refund_mode",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("RFND", "Can Refund Or Exchange"),
                            ("EXCH", "No Refund, Exchange Only"),
                            ("NONE", "Neither Refund Nor Exchange"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "refund_shipping_included",
                    models.BooleanField(default=False),
                ),
                ("company_address", models.TextField(blank=True)),
                ("website", models.URLField(blank=True)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                (
                    "email_address",
                    models.EmailField(blank=True, max_length=254),
                ),
                (
                    "instagram_profile",
                    models.URLField(blank=True, max_length=100),
                ),
                (
                    "facebook_profile",
                    models.URLField(blank=True, max_length=100),
                ),
                (
                    "linkedin_profile",
                    models.URLField(blank=True, max_length=100),
                ),
                (
                    "twitter_profile",
                    models.URLField(blank=True, max_length=100),
                ),
                (
                    "indicative_pricing",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BGT", "Budget Friendly"),
                            ("VAL", "Value"),
                            ("LUX", "Luxury"),
                        ],
                        max_length=3,
                    ),
                ),
                ("made_in_india", models.BooleanField(default=True)),
                ("environment_friendly", models.BooleanField(default=False)),
                ("handcrafted", models.BooleanField(default=False)),
                ("customizable", models.BooleanField(default=False)),
                ("plus_size_available", models.BooleanField(default=False)),
                ("material", models.CharField(blank=True, max_length=250)),
                (
                    "certifications",
                    models.CharField(blank=True, max_length=250),
                ),
                ("keywords", models.TextField(blank=True)),
                ("is_claimed", models.BooleanField(default=False)),
                (
                    "user_rating",
                    models.DecimalField(
                        decimal_places=1,
                        default=0.0,
                        max_digits=2,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                (
                    "brandscanner_rating",
                    models.DecimalField(
                        decimal_places=1,
                        default=0.0,
                        max_digits=2,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                ("page_views", models.PositiveIntegerField(default=0)),
                (
                    "last_updated",
                    models.DateTimeField(
                        default=utilities.dates.current_india_time
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="BrandAsset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "asset",
                    models.FileField(
                        help_text="Select an image that you want to upload.",
                        upload_to="uploads/%Y/%m/%d/",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Provide a title for this image.",
                        max_length=100,
                    ),
                ),
                ("priority", models.PositiveIntegerField(default=1)),
                (
                    "uploaded_at",
                    models.DateTimeField(
                        default=utilities.dates.current_india_time
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BrandBestseller",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "collection_name",
                    models.CharField(
                        help_text="Provide the product collection name.",
                        max_length=50,
                    ),
                ),
                (
                    "collection_date",
                    models.CharField(
                        help_text="Provide month and year. Ex: May 2023",
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BrandCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("keywords", models.TextField(blank=True)),
            ],
            options={
                "verbose_name_plural": "brand categories",
            },
        ),
        migrations.CreateModel(
            name="BrandEndorsement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "collection_name",
                    models.CharField(
                        help_text="Provide the product collection name.",
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BrandKeyPerson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "designation",
                    models.CharField(
                        choices=[
                            ("FR", "Founder"),
                            ("CFR", "Co Founder"),
                            ("DR", "Director"),
                            ("VP", "Vice President"),
                        ],
                        max_length=4,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "key people",
            },
        ),
        migrations.CreateModel(
            name="BrandOnlineStore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BrandTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BrandVisual",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=25)),
            ],
            options={
                "verbose_name_plural": "categories",
            },
        ),
        migrations.CreateModel(
            name="OnlineStore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "salutation",
                    models.CharField(
                        choices=[
                            ("MR", "Mr."),
                            ("MS", "Ms."),
                            ("MRS", "Mrs."),
                            ("DR", "Dr."),
                            ("PT", "Pt."),
                        ],
                        max_length=4,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        help_text="Upload a display picture for this person.",
                        upload_to="uploads/%Y/%m/%d/",
                    ),
                ),
                (
                    "background",
                    models.TextField(
                        blank=True,
                        help_text="Provide a short backgound information.",
                    ),
                ),
                (
                    "is_celebrity",
                    models.BooleanField(
                        default=False,
                        help_text="Is this person is a celebrity?",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "people",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", brand.models.LowerCaseCharField(max_length=30)),
                ("value", brand.models.LowerCaseCharField(max_length=50)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="brand.category",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="onlinestore",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("name"),
                name="unique_case_insensitive_online_store_name",
            ),
        ),
        migrations.AddConstraint(
            model_name="category",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("name"),
                name="unique_case_insensitive_category_name",
            ),
        ),
        migrations.AddField(
            model_name="brandvisual",
            name="brand",
            field=models.OneToOneField(
                help_text="Select a brand.",
                on_delete=django.db.models.deletion.CASCADE,
                to="brand.brand",
            ),
        ),
        migrations.AddField(
            model_name="brandvisual",
            name="cover",
            field=models.ForeignKey(
                blank=True,
                help_text="Select from existing image assets.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="brand_cover",
                to="brand.brandasset",
            ),
        ),
        migrations.AddField(
            model_name="brandvisual",
            name="logo",
            field=models.ForeignKey(
                blank=True,
                help_text="Select from existing image assets.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="brand_logo",
                to="brand.brandasset",
            ),
        ),
        migrations.AddField(
            model_name="brandtag",
            name="brand",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="brand.brand"
            ),
        ),
        migrations.AddField(
            model_name="brandtag",
            name="tag",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="brand.tag"
            ),
        ),
        migrations.AddField(
            model_name="brandonlinestore",
            name="brand",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="brand.brand"
            ),
        ),
        migrations.AddField(
            model_name="brandonlinestore",
            name="online_store",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="brand.onlinestore",
            ),
        ),
        migrations.AddField(
            model_name="brandkeyperson",
            name="brand",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="brand.brand"
            ),
        ),
        migrations.AddField(
            model_name="brandkeyperson",
            name="person",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="brand.person",
            ),
        ),
        migrations.AddField(
            model_name="brandendorsement",
            name="brand",
            field=models.ForeignKey(
                help_text="Select a brand.",
                on_delete=django.db.models.deletion.CASCADE,
                to="brand.brand",
            ),
        ),
        migrations.AddField(
            model_name="brandendorsement",
            name="person",
            field=models.ForeignKey(
                help_text="Select from existing people.",
                on_delete=django.db.models.deletion.CASCADE,
                to="brand.person",
            ),
        ),
        migrations.AddField(
            model_name="brandcategory",
            name="brand",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="brand.brand"
            ),
        ),
        migrations.AddField(
            model_name="brandcategory",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="brand.category",
            ),
        ),
        migrations.AddField(
            model_name="brandbestseller",
            name="brand",
            field=models.ForeignKey(
                help_text="Select a brand.",
                on_delete=django.db.models.deletion.CASCADE,
                to="brand.brand",
            ),
        ),
        migrations.AddField(
            model_name="brandasset",
            name="bestseller",
            field=models.ForeignKey(
                blank=True,
                help_text="Associate with a bestseller, if applicable.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="brand.brandbestseller",
            ),
        ),
        migrations.AddField(
            model_name="brandasset",
            name="brand",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="brand.brand"
            ),
        ),
        migrations.AddField(
            model_name="brandasset",
            name="endorsement",
            field=models.ForeignKey(
                blank=True,
                help_text="Associate with an endorsement, if applicable.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="brand.brandendorsement",
            ),
        ),
        migrations.AddConstraint(
            model_name="tag",
            constraint=models.UniqueConstraint(
                models.F("category"),
                models.F("name"),
                models.F("value"),
                name="unique_tag_name_value_pair_per_category",
            ),
        ),
        migrations.AddConstraint(
            model_name="brandtag",
            constraint=models.UniqueConstraint(
                models.F("brand"),
                models.F("tag"),
                name="unique_brand_tag_per_category",
            ),
        ),
        migrations.AddConstraint(
            model_name="brandonlinestore",
            constraint=models.UniqueConstraint(
                models.F("brand"),
                models.F("online_store"),
                name="unique_brand_online_store_pair",
            ),
        ),
        migrations.AddConstraint(
            model_name="brandcategory",
            constraint=models.UniqueConstraint(
                models.F("brand"),
                models.F("category"),
                name="unique_brand_category_pair",
            ),
        ),
    ]
